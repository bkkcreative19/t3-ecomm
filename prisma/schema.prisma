generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgres://ecomm_yay_user:bAYMEW3eAFfFMb4riKl2pgsHr2aXcMDg@dpg-ceov1g4gqg4ekmf6eueg-a.oregon-postgres.render.com/ecomm_yay"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  orders        Order[]
  cart          Cart?    
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Product {
  id             String   @id @default(cuid())
  title          String?
  description    String?
  category       String?
  rating         Int?
  price          Float?
  imageURL       String?
  detailImageURL String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  cartItem       CartItem?       
}

model Cart {
  id             String   @id @default(cuid())
  userId         String   @unique
  total          Float?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  cartItems      CartItem[]
}

model CartItem {
  id             String   @id @default(cuid())
  cartId         String
  cart           Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)
  productId      String   @unique
  product        Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  quantity       Int?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Order {
  id             String   @id @default(cuid())
  userId         String   @unique
  user           User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  total          Float
}


model OrderItem {
  id             String   @id @default(cuid())
}